import { PaperWalletConnectionArgs, PaperWalletAdditionalOptions as PaperWalletAdditionalOptions_ } from "../connectors/paper/types";
import { Connector } from "../interfaces/connector";
import { AbstractClientWallet, WalletOptions } from "./base";
import type { Chain } from "@thirdweb-dev/chains";
export type { PaperWalletAdditionalOptions } from "../connectors/paper/types";
export type PaperWalletOptions = WalletOptions<PaperWalletAdditionalOptions_>;
export declare class PaperWallet extends AbstractClientWallet<PaperWalletAdditionalOptions_, PaperWalletConnectionArgs> {
    connector?: Connector;
    static id: string;
    static meta: {
        name: string;
        iconURL: string;
    };
    get walletName(): "Paper Wallet";
    clientId: PaperWalletAdditionalOptions_["clientId"];
    chain: PaperWalletAdditionalOptions_["chain"];
    constructor(options: PaperWalletOptions);
    protected getConnector(): Promise<Connector>;
    updateChains(chains: Chain[]): Promise<void>;
    getEmail(): Promise<string | undefined>;
}
//# sourceMappingURL=paper-wallet.d.ts.map