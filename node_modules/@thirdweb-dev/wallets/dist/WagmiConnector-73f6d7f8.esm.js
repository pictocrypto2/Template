import { _ as _defineProperty } from './defineProperty-e24c82ea.esm.js';
import { defaultChains } from '@thirdweb-dev/chains';
import EventEmitter from 'eventemitter3';

class WagmiConnector extends EventEmitter {
  constructor(_ref) {
    let {
      chains = defaultChains,
      options
    } = _ref;
    super();
    /** Unique connector id */
    _defineProperty(this, "id", void 0);
    /** Connector name */
    _defineProperty(this, "name", void 0);
    /** Chains connector supports */
    _defineProperty(this, "chains", void 0);
    /** Options to use with connector */
    _defineProperty(this, "options", void 0);
    /** Whether connector is usable */
    _defineProperty(this, "ready", void 0);
    this.chains = chains;
    this.options = options;
  }
  getBlockExplorerUrls(chain) {
    const explorers = chain.explorers?.map(x => x.url) ?? [];
    return explorers.length > 0 ? explorers : undefined;
  }
  isChainUnsupported(chainId) {
    return !this.chains.some(x => x.chainId === chainId);
  }
  updateChains(chains) {
    this.chains = chains;
  }
}

export { WagmiConnector as W };
