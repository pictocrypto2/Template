"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["node_modules_thirdweb-dev_sdk_dist_pack-75f8fc43_browser_esm_js"],{

/***/ "./node_modules/@thirdweb-dev/sdk/dist/pack-75f8fc43.browser.esm.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@thirdweb-dev/sdk/dist/pack-75f8fc43.browser.esm.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Pack: function() { return /* binding */ Pack; }\n/* harmony export */ });\n/* harmony import */ var _QueryParams_30d20f88_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./QueryParams-30d20f88.browser.esm.js */ \"./node_modules/@thirdweb-dev/sdk/dist/QueryParams-30d20f88.browser.esm.js\");\n/* harmony import */ var _contract_publisher_4d407331_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./contract-publisher-4d407331.browser.esm.js */ \"./node_modules/@thirdweb-dev/sdk/dist/contract-publisher-4d407331.browser.esm.js\");\n/* harmony import */ var _erc_1155_standard_0a0f7dce_browser_esm_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./erc-1155-standard-0a0f7dce.browser.esm.js */ \"./node_modules/@thirdweb-dev/sdk/dist/erc-1155-standard-0a0f7dce.browser.esm.js\");\n/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_ERC20_json__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/ERC20.json */ \"./node_modules/@thirdweb-dev/contracts-js/dist/abis/ERC20.json\");\n/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_IPackVRFDirect_json__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/IPackVRFDirect.json */ \"./node_modules/@thirdweb-dev/contracts-js/dist/abis/IPackVRFDirect.json\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ethers */ \"./node_modules/ethers/lib.esm/index.js\");\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! zod */ \"./node_modules/zod/lib/index.mjs\");\n/* harmony import */ var _hasERC20Allowance_5075b187_browser_esm_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./hasERC20Allowance-5075b187.browser.esm.js */ \"./node_modules/@thirdweb-dev/sdk/dist/hasERC20Allowance-5075b187.browser.esm.js\");\n/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bn.js */ \"./node_modules/bn.js/lib/bn.js\");\n/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(bn_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var tiny_invariant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tiny-invariant */ \"./node_modules/tiny-invariant/dist/esm/tiny-invariant.js\");\n/* harmony import */ var merkletreejs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! merkletreejs */ \"./node_modules/merkletreejs/dist/index.js\");\n/* harmony import */ var merkletreejs__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(merkletreejs__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var fast_deep_equal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! fast-deep-equal */ \"./node_modules/fast-deep-equal/index.js\");\n/* harmony import */ var fast_deep_equal__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(fast_deep_equal__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! bs58 */ \"./node_modules/bs58/index.js\");\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(bs58__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! eventemitter3 */ \"./node_modules/eventemitter3/index.mjs\");\n/* harmony import */ var cross_fetch__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! cross-fetch */ \"./node_modules/cross-fetch/dist/browser-ponyfill.js\");\n/* harmony import */ var cross_fetch__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(cross_fetch__WEBPACK_IMPORTED_MODULE_6__);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @internal\n */\nconst CommonWrappableSchema = /* @__PURE__ */zod__WEBPACK_IMPORTED_MODULE_7__.z.object({\n  contractAddress: _contract_publisher_4d407331_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.aa\n});\n\n/**\n * @internal\n */\nconst ERC20WrappableSchema = /* @__PURE__ */CommonWrappableSchema.extend({\n  quantity: _QueryParams_30d20f88_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.A\n});\n\n/**\n * @internal\n */\nconst ERC721WrappableSchema = /* @__PURE__ */CommonWrappableSchema.extend({\n  tokenId: _contract_publisher_4d407331_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.a7\n});\n\n/**\n * @internal\n */\nconst ERC1155WrappableSchema = /* @__PURE__ */CommonWrappableSchema.extend({\n  tokenId: _contract_publisher_4d407331_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.a7,\n  quantity: _contract_publisher_4d407331_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.a7\n});\n\n/**\n * @internal\n */\nconst ERC20RewardSchema = /* @__PURE__ */ERC20WrappableSchema.omit({\n  quantity: true\n}).extend({\n  quantityPerReward: _QueryParams_30d20f88_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.A\n});\n\n/**\n * @internal\n */\nconst ERC721RewardSchema = ERC721WrappableSchema;\n\n/**\n * @internal\n */\nconst ERC1155RewardSchema = /* @__PURE__ */ERC1155WrappableSchema.omit({\n  quantity: true\n}).extend({\n  quantityPerReward: _contract_publisher_4d407331_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.a7\n});\n\n/**\n * @internal\n */\nconst ERC20RewardContentsSchema = /* @__PURE__ */(() => ERC20RewardSchema.extend({\n  totalRewards: _contract_publisher_4d407331_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.a7.default(\"1\")\n}))();\n\n/**\n * @internal\n */\nconst ERC721RewardContentsSchema = ERC721RewardSchema;\n\n/**\n * @internal\n */\nconst ERC1155RewardContentsSchema = /* @__PURE__ */(() => ERC1155RewardSchema.extend({\n  totalRewards: _contract_publisher_4d407331_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.a7.default(\"1\")\n}))();\n\n/**\n * @internal\n */\nconst PackRewardsOutputSchema = /* @__PURE__ */(() => zod__WEBPACK_IMPORTED_MODULE_7__.z.object({\n  erc20Rewards: zod__WEBPACK_IMPORTED_MODULE_7__.z.array(ERC20RewardContentsSchema).default([]),\n  erc721Rewards: zod__WEBPACK_IMPORTED_MODULE_7__.z.array(ERC721RewardContentsSchema).default([]),\n  erc1155Rewards: zod__WEBPACK_IMPORTED_MODULE_7__.z.array(ERC1155RewardContentsSchema).default([])\n}))();\n\n/**\n * @internal\n */\nconst PackMetadataInputSchema = /* @__PURE__ */(() => PackRewardsOutputSchema.extend({\n  packMetadata: _QueryParams_30d20f88_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.N,\n  rewardsPerPack: _contract_publisher_4d407331_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.a7.default(\"1\"),\n  openStartTime: _contract_publisher_4d407331_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.ab.default(new Date())\n}))();\n\n/**\n * @public\n */\n\n/**\n * @public\n */\n\n/**\n * @public\n */\n\n/**\n * @public\n */\n\nclass PackVRF {\n  constructor(network, address, storage, options, chainId) {\n    var _this = this;\n    let contractWrapper = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : new _contract_publisher_4d407331_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.dd(network, address, _thirdweb_dev_contracts_js_dist_abis_IPackVRFDirect_json__WEBPACK_IMPORTED_MODULE_10__, options);\n    (0,_QueryParams_30d20f88_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__._)(this, \"featureName\", _contract_publisher_4d407331_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.dD.name);\n    (0,_QueryParams_30d20f88_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__._)(this, \"contractWrapper\", void 0);\n    (0,_QueryParams_30d20f88_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__._)(this, \"storage\", void 0);\n    (0,_QueryParams_30d20f88_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__._)(this, \"chainId\", void 0);\n    (0,_QueryParams_30d20f88_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__._)(this, \"events\", void 0);\n    /**\n     * Open pack\n     *\n     * @example\n     * ```javascript\n     * const tokenId = 0;\n     * const amount = 1;\n     * const receipt = await contract.pack.open(tokenId, amount);\n     * ```\n     *\n     * @remarks Open a pack using Chainlink VRFs random number generation\n     * @remarks This will return a transaction result with the requestId of the open request, NOT the contents of the pack\n     * @remarks To get the contents of the pack, you must call claimRewards once the VRF request has been fulfilled\n     * @remarks You can use the canClaimRewards method to check if the VRF request has been fulfilled\n     * @param tokenId\n     * @param amount\n     * @returns\n     * @twfeature PackVRF\n     */\n    (0,_QueryParams_30d20f88_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__._)(this, \"open\", /* @__PURE__ */(0,_contract_publisher_4d407331_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.d6)(async function (tokenId) {\n      let amount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n      let gasLimit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 500000;\n      return _contract_publisher_4d407331_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.aV.fromContractWrapper({\n        contractWrapper: _this.contractWrapper,\n        method: \"openPack\",\n        args: [tokenId, amount],\n        overrides: {\n          // Higher gas limit for opening packs\n          gasLimit\n        },\n        parse: receipt => {\n          let id = ethers__WEBPACK_IMPORTED_MODULE_11__.BigNumber.from(0);\n          try {\n            const event = _this.contractWrapper.parseLogs(\"PackOpenRequested\", receipt?.logs);\n            id = event[0].args.requestId;\n          } catch (e) {}\n          return {\n            receipt,\n            id\n          };\n        }\n      });\n    }));\n    /**\n     * Claim the rewards from an opened pack\n     *\n     * @example\n     * ```javascript\n     * const rewards = await contract.pack.claimRewards();\n     * ```\n     *\n     * @remarks This will return the contents of the pack\n     * @remarks Make sure to check if the VRF request has been fulfilled using canClaimRewards() before calling this method\n     * @returns the random rewards from opening a pack\n     * @twfeature PackVRF\n     */\n    (0,_QueryParams_30d20f88_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__._)(this, \"claimRewards\", /* @__PURE__ */(0,_contract_publisher_4d407331_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.d6)(async function () {\n      let gasLimit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 500000;\n      return _contract_publisher_4d407331_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.aV.fromContractWrapper({\n        contractWrapper: _this.contractWrapper,\n        method: \"claimRewards\",\n        args: [],\n        overrides: {\n          // Higher gas limit for opening packs\n          gasLimit\n        },\n        parse: async receipt => {\n          const event = _this.contractWrapper.parseLogs(\"PackOpened\", receipt?.logs);\n          if (event.length === 0) {\n            throw new Error(\"PackOpened event not found\");\n          }\n          const rewards = event[0].args.rewardUnitsDistributed;\n          return await _this.parseRewards(rewards);\n        }\n      });\n    }));\n    this.contractWrapper = contractWrapper;\n    this.storage = storage;\n    this.chainId = chainId;\n    this.events = new _contract_publisher_4d407331_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.aQ(this.contractWrapper);\n  }\n  onNetworkUpdated(network) {\n    this.contractWrapper.updateSignerOrProvider(network);\n  }\n  getAddress() {\n    return this.contractWrapper.readContract.address;\n  }\n  async parseRewards(rewards) {\n    const erc20Rewards = [];\n    const erc721Rewards = [];\n    const erc1155Rewards = [];\n    for (const reward of rewards) {\n      switch (reward.tokenType) {\n        case 0:\n          {\n            const tokenMetadata = await (0,_contract_publisher_4d407331_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.bc)(this.contractWrapper.getProvider(), reward.assetContract);\n            erc20Rewards.push({\n              contractAddress: reward.assetContract,\n              quantityPerReward: ethers__WEBPACK_IMPORTED_MODULE_11__.utils.formatUnits(reward.totalAmount, tokenMetadata.decimals).toString()\n            });\n            break;\n          }\n        case 1:\n          {\n            erc721Rewards.push({\n              contractAddress: reward.assetContract,\n              tokenId: reward.tokenId.toString()\n            });\n            break;\n          }\n        case 2:\n          {\n            erc1155Rewards.push({\n              contractAddress: reward.assetContract,\n              tokenId: reward.tokenId.toString(),\n              quantityPerReward: reward.totalAmount.toString()\n            });\n            break;\n          }\n      }\n    }\n    return {\n      erc20Rewards,\n      erc721Rewards,\n      erc1155Rewards\n    };\n  }\n\n  /**\n   * Setup a listener for when a pack is opened\n   *\n   * @example\n   * ```javascript\n   * const unsubscribe = await contract.pack.addPackOpenEventListener((packId, openerAddress, rewards) => {\n   *  console.log(`Pack ${packId} was opened by ${openerAddress} and contained:`, rewards);\n   * });\n   * @param callback the listener to call when a pack is opened\n   * @returns a unsubscribe function to cleanup the listener\n   * @twfeature PackVRF\n   */\n  async addPackOpenEventListener(callback) {\n    return this.events.addEventListener(\"PackOpened\", async event => {\n      callback(event.data.packId.toString(), event.data.opener, await this.parseRewards(event.data.rewardUnitsDistributed));\n    });\n  }\n\n  /**\n   * Check if a specific wallet can claim rewards after opening a pack\n   *\n   * @example\n   * ```javascript\n   * const canClaim = await contract.pack.canClaimRewards(\"{{wallet_address}}\");\n   * ```\n   * @param claimerAddress Optional: the address to check if they can claim rewards, defaults to the connected address\n   * @returns whether the connected address can claim rewards after opening a pack\n   * @twfeature PackVRF\n   */\n  async canClaimRewards(claimerAddress) {\n    const address = await (0,_contract_publisher_4d407331_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.cs)(claimerAddress || (await this.contractWrapper.getSignerAddress()));\n    return await this.contractWrapper.readContract.canClaimRewards(address);\n  }\n\n  /**\n   * Open a pack and claim the rewards\n   * @remarks This function will only start the flow of opening a pack, the rewards will be granted automatically to the connected address after VRF request is fulfilled\n   *\n   * @example\n   * ```javascript\n   * const packId = 0;\n   * const amount = 1;\n   * const { id } = await contract.pack.openAndClaim(packId, amount);\n   * ```\n   *\n   * @param packId The id of the pack to open\n   * @param amount Optional: the amount of packs to open, defaults to 1\n   * @param gasLimit Optional: the gas limit to use for the VRF callback transaction, defaults to 500000\n   * @returns\n   * @twfeature PackVRF\n   */\n  async openAndClaim(packId) {\n    let amount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    let gasLimit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 500000;\n    const receipt = await this.contractWrapper.sendTransaction(\"openPackAndClaimRewards\", [packId, amount, gasLimit], {\n      // Higher gas limit for opening packs\n      gasLimit: ethers__WEBPACK_IMPORTED_MODULE_11__.BigNumber.from(500000)\n    });\n    let id = ethers__WEBPACK_IMPORTED_MODULE_11__.BigNumber.from(0);\n    try {\n      const event = this.contractWrapper.parseLogs(\"PackOpenRequested\", receipt?.logs);\n      id = event[0].args.requestId;\n    } catch (e) {}\n    return {\n      receipt,\n      id\n    };\n  }\n\n  /**\n   * Get the LINK balance of the contract\n   *\n   * @example\n   * ```javascript\n   * const balance = await contract.pack.getLinkBalance();\n   * ```\n   *\n   * @returns the balance of LINK in the contract\n   * @twfeature PackVRF\n   */\n  async getLinkBalance() {\n    return this.getLinkContract().balanceOf(this.contractWrapper.readContract.address);\n  }\n\n  /**\n   * Transfer LINK to this contract\n   *\n   * @example\n   * ```javascript\n   * const amount = 1;\n   * await contract.pack.transferLink(amount);\n   * ```\n   *\n   * @param amount the amount of LINK to transfer to the contract\n   * @twfeature PackVRF\n   */\n  async transferLink(amount) {\n    await this.getLinkContract().transfer(this.contractWrapper.readContract.address, amount);\n  }\n  getLinkContract() {\n    const linkAddress = _contract_publisher_4d407331_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.cG[this.chainId];\n    if (!linkAddress) {\n      throw new Error(`No LINK token address found for chainId ${this.chainId}`);\n    }\n    const contract = new _contract_publisher_4d407331_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.dd(this.contractWrapper.getSignerOrProvider(), linkAddress, _thirdweb_dev_contracts_js_dist_abis_ERC20_json__WEBPACK_IMPORTED_MODULE_12__, this.contractWrapper.options);\n    return new _contract_publisher_4d407331_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.at(contract, this.storage, this.chainId);\n  }\n}\n\n/**\n * Create lootboxes of NFTs with rarity based open mechanics.\n *\n * @example\n *\n * ```javascript\n * import { ThirdwebSDK } from \"@thirdweb-dev/sdk\";\n *\n * const sdk = new ThirdwebSDK(\"{{chainName}}\");\n * const contract = await sdk.getContract(\"{{contract_address}}\", \"pack\");\n * ```\n *\n * @public\n */\nclass Pack extends _erc_1155_standard_0a0f7dce_browser_esm_js__WEBPACK_IMPORTED_MODULE_13__.S {\n  /**\n   * If enabled in the contract, use the Chainlink VRF functionality to open packs\n   */\n  get vrf() {\n    return (0,_contract_publisher_4d407331_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.c0)(this._vrf, _contract_publisher_4d407331_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.dD);\n  }\n  constructor(network, address, storage) {\n    var _this;\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    let abi = arguments.length > 4 ? arguments[4] : undefined;\n    let chainId = arguments.length > 5 ? arguments[5] : undefined;\n    let contractWrapper = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : new _contract_publisher_4d407331_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.dd(network, address, abi, options.gasless && \"openzeppelin\" in options.gasless ? {\n      ...options,\n      gasless: {\n        ...options.gasless,\n        openzeppelin: {\n          ...options.gasless.openzeppelin,\n          useEOAForwarder: true\n        }\n      }\n    } : options);\n    super(contractWrapper, storage, chainId);\n    _this = this;\n    (0,_QueryParams_30d20f88_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__._)(this, \"abi\", void 0);\n    (0,_QueryParams_30d20f88_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__._)(this, \"metadata\", void 0);\n    (0,_QueryParams_30d20f88_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__._)(this, \"app\", void 0);\n    (0,_QueryParams_30d20f88_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__._)(this, \"roles\", void 0);\n    (0,_QueryParams_30d20f88_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__._)(this, \"encoder\", void 0);\n    (0,_QueryParams_30d20f88_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__._)(this, \"events\", void 0);\n    (0,_QueryParams_30d20f88_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__._)(this, \"estimator\", void 0);\n    /**\n     * Configure royalties\n     * @remarks Set your own royalties for the entire contract or per pack\n     * @example\n     * ```javascript\n     * // royalties on the whole contract\n     * contract.royalties.setDefaultRoyaltyInfo({\n     *   seller_fee_basis_points: 100, // 1%\n     *   fee_recipient: \"0x...\"\n     * });\n     * // override royalty for a particular pack\n     * contract.royalties.setTokenRoyaltyInfo(packId, {\n     *   seller_fee_basis_points: 500, // 5%\n     *   fee_recipient: \"0x...\"\n     * });\n     * ```\n     */\n    (0,_QueryParams_30d20f88_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__._)(this, \"royalties\", void 0);\n    /**\n     * @internal\n     */\n    (0,_QueryParams_30d20f88_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__._)(this, \"interceptor\", void 0);\n    (0,_QueryParams_30d20f88_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__._)(this, \"owner\", void 0);\n    (0,_QueryParams_30d20f88_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__._)(this, \"_vrf\", void 0);\n    /** ******************************\n     * WRITE FUNCTIONS\n     *******************************/\n    /**\n     * Create Pack\n     * @remarks Create a new pack with the given metadata and rewards and mint it to the connected wallet.\n     * @remarks See {@link Pack.createTo}\n     *\n     * @param metadataWithRewards - the metadata and rewards to include in the pack\n     * @example\n     * ```javascript\n     * const pack = {\n     *   // The metadata for the pack NFT itself\n     *   packMetadata: {\n     *     name: \"My Pack\",\n     *     description: \"This is a new pack\",\n     *     image: \"ipfs://...\",\n     *   },\n     *   // ERC20 rewards to be included in the pack\n     *   erc20Rewards: [\n     *     {\n     *       assetContract: \"0x...\",\n     *       quantityPerReward: 5,\n     *       quantity: 100,\n     *       totalRewards: 20,\n     *     }\n     *   ],\n     *   // ERC721 rewards to be included in the pack\n     *   erc721Rewards: [\n     *     {\n     *       assetContract: \"0x...\",\n     *       tokenId: 0,\n     *     }\n     *   ],\n     *   // ERC1155 rewards to be included in the pack\n     *   erc1155Rewards: [\n     *     {\n     *       assetContract: \"0x...\",\n     *       tokenId: 0,\n     *       quantityPerReward: 1,\n     *       totalRewards: 100,\n     *     }\n     *   ],\n     *   openStartTime: new Date(), // the date that packs can start to be opened, defaults to now\n     *   rewardsPerPack: 1, // the number of rewards in each pack, defaults to 1\n     * }\n     *\n     * const tx = await contract.create(pack);\n     * ```\n     */\n    (0,_QueryParams_30d20f88_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__._)(this, \"create\", /* @__PURE__ */(0,_contract_publisher_4d407331_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.d6)(async metadataWithRewards => {\n      const signerAddress = await this.contractWrapper.getSignerAddress();\n      return this.createTo.prepare(signerAddress, metadataWithRewards);\n    }));\n    /**\n     * Add Pack Contents\n     * @remarks Add contents to an existing pack.\n     * @remarks See {@link Pack.addPackContents}\n     *\n     * @param packId - token Id of the pack to add contents to\n     * @param packContents - the rewards to include in the pack\n     * @example\n     * ```javascript\n     * const packContents = {\n     *   // ERC20 rewards to be included in the pack\n     *   erc20Rewards: [\n     *     {\n     *       assetContract: \"0x...\",\n     *       quantityPerReward: 5,\n     *       quantity: 100,\n     *       totalRewards: 20,\n     *     }\n     *   ],\n     *   // ERC721 rewards to be included in the pack\n     *   erc721Rewards: [\n     *     {\n     *       assetContract: \"0x...\",\n     *       tokenId: 0,\n     *     }\n     *   ],\n     *   // ERC1155 rewards to be included in the pack\n     *   erc1155Rewards: [\n     *     {\n     *       assetContract: \"0x...\",\n     *       tokenId: 0,\n     *       quantityPerReward: 1,\n     *       totalRewards: 100,\n     *     }\n     *   ],\n     * }\n     *\n     * const tx = await contract.addPackContents(packId, packContents);\n     * ```\n     */\n    (0,_QueryParams_30d20f88_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__._)(this, \"addPackContents\", /* @__PURE__ */(0,_contract_publisher_4d407331_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.d6)(async (packId, packContents) => {\n      const signerAddress = await this.contractWrapper.getSignerAddress();\n      const parsedContents = await PackRewardsOutputSchema.parseAsync(packContents);\n      const {\n        contents,\n        numOfRewardUnits\n      } = await this.toPackContentArgs(parsedContents);\n      return _contract_publisher_4d407331_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.aV.fromContractWrapper({\n        contractWrapper: this.contractWrapper,\n        method: \"addPackContents\",\n        args: [packId, contents, numOfRewardUnits, signerAddress],\n        parse: receipt => {\n          const event = this.contractWrapper.parseLogs(\"PackUpdated\", receipt?.logs);\n          if (event.length === 0) {\n            throw new Error(\"PackUpdated event not found\");\n          }\n          const id = event[0].args.packId;\n          return {\n            id: id,\n            receipt,\n            data: () => this.erc1155.get(id)\n          };\n        }\n      });\n    }));\n    /**\n     * Create Pack To Wallet\n     * @remarks Create a new pack with the given metadata and rewards and mint it to the specified address.\n     *\n     * @param to - the address to mint the pack to\n     * @param metadataWithRewards - the metadata and rewards to include in the pack\n     *\n     * @example\n     * ```javascript\n     * const pack = {\n     *   // The metadata for the pack NFT itself\n     *   packMetadata: {\n     *     name: \"My Pack\",\n     *     description: \"This is a new pack\",\n     *     image: \"ipfs://...\",\n     *   },\n     *   // ERC20 rewards to be included in the pack\n     *   erc20Rewards: [\n     *     {\n     *       assetContract: \"0x...\",\n     *       quantityPerReward: 5,\n     *       quantity: 100,\n     *       totalRewards: 20,\n     *     }\n     *   ],\n     *   // ERC721 rewards to be included in the pack\n     *   erc721Rewards: [\n     *     {\n     *       assetContract: \"0x...\",\n     *       tokenId: 0,\n     *     }\n     *   ],\n     *   // ERC1155 rewards to be included in the pack\n     *   erc1155Rewards: [\n     *     {\n     *       assetContract: \"0x...\",\n     *       tokenId: 0,\n     *       quantityPerReward: 1,\n     *       totalRewards: 100,\n     *     }\n     *   ],\n     *   openStartTime: new Date(), // the date that packs can start to be opened, defaults to now\n     *   rewardsPerPack: 1, // the number of rewards in each pack, defaults to 1\n     * }\n     *\n     * const tx = await contract.createTo(\"0x...\", pack);\n     * ```\n     */\n    (0,_QueryParams_30d20f88_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__._)(this, \"createTo\", /* @__PURE__ */(0,_contract_publisher_4d407331_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.d6)(async (to, metadataWithRewards) => {\n      const uri = await (0,_contract_publisher_4d407331_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.dz)(metadataWithRewards.packMetadata, this.storage);\n      const parsedMetadata = await PackMetadataInputSchema.parseAsync(metadataWithRewards);\n      const {\n        erc20Rewards,\n        erc721Rewards,\n        erc1155Rewards\n      } = parsedMetadata;\n      const rewardsData = {\n        erc20Rewards,\n        erc721Rewards,\n        erc1155Rewards\n      };\n      const {\n        contents,\n        numOfRewardUnits\n      } = await this.toPackContentArgs(rewardsData);\n      return _contract_publisher_4d407331_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.aV.fromContractWrapper({\n        contractWrapper: this.contractWrapper,\n        method: \"createPack\",\n        args: [contents, numOfRewardUnits, uri, parsedMetadata.openStartTime, parsedMetadata.rewardsPerPack, await (0,_contract_publisher_4d407331_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.cs)(to)],\n        parse: receipt => {\n          const event = this.contractWrapper.parseLogs(\"PackCreated\", receipt?.logs);\n          if (event.length === 0) {\n            throw new Error(\"PackCreated event not found\");\n          }\n          const packId = event[0].args.packId;\n          return {\n            id: packId,\n            receipt,\n            data: () => this.erc1155.get(packId)\n          };\n        }\n      });\n    }));\n    /**\n     * Open Pack\n     *\n     * @remarks - Open a pack to reveal the contained rewards. This will burn the specified pack and\n     * the contained assets will be transferred to the opening users wallet.\n     *\n     * @param tokenId - the token ID of the pack you want to open\n     * @param amount - the amount of packs you want to open\n     *\n     * @example\n     * ```javascript\n     * const tokenId = 0\n     * const amount = 1\n     * const tx = await contract.open(tokenId, amount);\n     * ```\n     */\n    (0,_QueryParams_30d20f88_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__._)(this, \"open\", /* @__PURE__ */(0,_contract_publisher_4d407331_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.d6)(async function (tokenId) {\n      let amount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n      let gasLimit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 500000;\n      if (_this._vrf) {\n        throw new Error(\"This contract is using Chainlink VRF, use `contract.vrf.open()` or `contract.vrf.openAndClaim()` instead\");\n      }\n      return _contract_publisher_4d407331_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.aV.fromContractWrapper({\n        contractWrapper: _this.contractWrapper,\n        method: \"openPack\",\n        args: [tokenId, amount],\n        overrides: {\n          // Higher gas limit for opening packs\n          gasLimit\n        },\n        parse: async receipt => {\n          const event = _this.contractWrapper.parseLogs(\"PackOpened\", receipt?.logs);\n          if (event.length === 0) {\n            throw new Error(\"PackOpened event not found\");\n          }\n          const rewards = event[0].args.rewardUnitsDistributed;\n          const erc20Rewards = [];\n          const erc721Rewards = [];\n          const erc1155Rewards = [];\n          for (const reward of rewards) {\n            switch (reward.tokenType) {\n              case 0:\n                {\n                  const tokenMetadata = await (0,_contract_publisher_4d407331_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.bc)(_this.contractWrapper.getProvider(), reward.assetContract);\n                  erc20Rewards.push({\n                    contractAddress: reward.assetContract,\n                    quantityPerReward: ethers__WEBPACK_IMPORTED_MODULE_11__.utils.formatUnits(reward.totalAmount, tokenMetadata.decimals).toString()\n                  });\n                  break;\n                }\n              case 1:\n                {\n                  erc721Rewards.push({\n                    contractAddress: reward.assetContract,\n                    tokenId: reward.tokenId.toString()\n                  });\n                  break;\n                }\n              case 2:\n                {\n                  erc1155Rewards.push({\n                    contractAddress: reward.assetContract,\n                    tokenId: reward.tokenId.toString(),\n                    quantityPerReward: reward.totalAmount.toString()\n                  });\n                  break;\n                }\n            }\n          }\n          return {\n            erc20Rewards,\n            erc721Rewards,\n            erc1155Rewards\n          };\n        }\n      });\n    }));\n    this.abi = _contract_publisher_4d407331_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.e.parse(abi || []);\n    this.metadata = new _contract_publisher_4d407331_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.ag(this.contractWrapper, _contract_publisher_4d407331_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.dE, this.storage);\n    this.app = new _contract_publisher_4d407331_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.a$(this.contractWrapper, this.metadata, this.storage);\n    this.roles = new _contract_publisher_4d407331_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.ah(this.contractWrapper, Pack.contractRoles);\n    this.royalties = new _contract_publisher_4d407331_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.ai(this.contractWrapper, this.metadata);\n    this.encoder = new _contract_publisher_4d407331_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.af(this.contractWrapper);\n    this.estimator = new _contract_publisher_4d407331_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.aP(this.contractWrapper);\n    this.events = new _contract_publisher_4d407331_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.aQ(this.contractWrapper);\n    this.interceptor = new _contract_publisher_4d407331_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.aR(this.contractWrapper);\n    this.owner = new _contract_publisher_4d407331_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.aU(this.contractWrapper);\n    this._vrf = this.detectVrf();\n  }\n\n  /**\n   * @internal\n   */\n  onNetworkUpdated(network) {\n    this.contractWrapper.updateSignerOrProvider(network);\n    this._vrf?.onNetworkUpdated(network);\n  }\n  getAddress() {\n    return this.contractWrapper.readContract.address;\n  }\n\n  /** ******************************\n   * READ FUNCTIONS\n   *******************************/\n\n  /**\n   * Get a single Pack\n   *\n   * @remarks Get all the data associated with every pack in this contract.\n   *\n   * By default, returns the first 100 packs, use queryParams to fetch more.\n   *\n   * @example\n   * ```javascript\n   * const pack = await contract.get(0);\n   * console.log(packs;\n   * ```\n   */\n  async get(tokenId) {\n    return this.erc1155.get(tokenId);\n  }\n\n  /**\n   * Get All Packs\n   *\n   * @remarks Get all the data associated with every pack in this contract.\n   *\n   * By default, returns the first 100 packs, use queryParams to fetch more.\n   *\n   * @example\n   * ```javascript\n   * const packs = await contract.getAll();\n   * console.log(packs;\n   * ```\n   * @param queryParams - optional filtering to only fetch a subset of results.\n   * @returns The pack metadata for all packs queried.\n   */\n  async getAll(queryParams) {\n    return this.erc1155.getAll(queryParams);\n  }\n\n  /**\n   * Get Owned Packs\n   *\n   * @remarks Get all the data associated with the packs owned by a specific wallet.\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet to get the packs of\n   * const address = \"{{wallet_address}}\";\n   * const packss = await contract.getOwned(address);\n   * ```\n   *\n   * @returns The pack metadata for all the owned packs in the contract.\n   */\n  async getOwned(walletAddress) {\n    return this.erc1155.getOwned(walletAddress);\n  }\n\n  /**\n   * Get the number of packs created\n   * @returns the total number of packs minted in this contract\n   * @public\n   */\n  async getTotalCount() {\n    return this.erc1155.totalCount();\n  }\n\n  /**\n   * Get whether users can transfer packs from this contract\n   */\n  async isTransferRestricted() {\n    const anyoneCanTransfer = await this.contractWrapper.readContract.hasRole((0,_contract_publisher_4d407331_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.bJ)(\"transfer\"), ethers__WEBPACK_IMPORTED_MODULE_11__.constants.AddressZero);\n    return !anyoneCanTransfer;\n  }\n\n  /**\n   * Get Pack Contents\n   * @remarks Get the rewards contained inside a pack.\n   *\n   * @param packId - The id of the pack to get the contents of.\n   * @returns - The contents of the pack.\n   *\n   * @example\n   * ```javascript\n   * const packId = 0;\n   * const contents = await contract.getPackContents(packId);\n   * console.log(contents.erc20Rewards);\n   * console.log(contents.erc721Rewards);\n   * console.log(contents.erc1155Rewards);\n   * ```\n   */\n  async getPackContents(packId) {\n    const {\n      contents,\n      perUnitAmounts\n    } = await this.contractWrapper.readContract.getPackContents(packId);\n    const erc20Rewards = [];\n    const erc721Rewards = [];\n    const erc1155Rewards = [];\n    for (let i = 0; i < contents.length; i++) {\n      const reward = contents[i];\n      const amount = perUnitAmounts[i];\n      switch (reward.tokenType) {\n        case 0:\n          {\n            const tokenMetadata = await (0,_contract_publisher_4d407331_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.bc)(this.contractWrapper.getProvider(), reward.assetContract);\n            const quantityPerReward = ethers__WEBPACK_IMPORTED_MODULE_11__.utils.formatUnits(amount, tokenMetadata.decimals);\n            const totalRewards = ethers__WEBPACK_IMPORTED_MODULE_11__.utils.formatUnits(ethers__WEBPACK_IMPORTED_MODULE_11__.BigNumber.from(reward.totalAmount).div(amount), tokenMetadata.decimals);\n            erc20Rewards.push({\n              contractAddress: reward.assetContract,\n              quantityPerReward,\n              totalRewards\n            });\n            break;\n          }\n        case 1:\n          {\n            erc721Rewards.push({\n              contractAddress: reward.assetContract,\n              tokenId: reward.tokenId.toString()\n            });\n            break;\n          }\n        case 2:\n          {\n            erc1155Rewards.push({\n              contractAddress: reward.assetContract,\n              tokenId: reward.tokenId.toString(),\n              quantityPerReward: amount.toString(),\n              totalRewards: ethers__WEBPACK_IMPORTED_MODULE_11__.BigNumber.from(reward.totalAmount).div(amount).toString()\n            });\n            break;\n          }\n      }\n    }\n    return {\n      erc20Rewards,\n      erc721Rewards,\n      erc1155Rewards\n    };\n  }\n  /** *****************************\n   * PRIVATE FUNCTIONS\n   *******************************/\n\n  async toPackContentArgs(metadataWithRewards) {\n    const contents = [];\n    const numOfRewardUnits = [];\n    const {\n      erc20Rewards,\n      erc721Rewards,\n      erc1155Rewards\n    } = metadataWithRewards;\n    const provider = this.contractWrapper.getProvider();\n    const owner = await this.contractWrapper.getSignerAddress();\n    for (const erc20 of erc20Rewards) {\n      const normalizedQuantity = await (0,_contract_publisher_4d407331_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.bb)(provider, erc20.quantityPerReward, erc20.contractAddress);\n      // Multiply the quantity of one reward by the number of rewards\n      const totalQuantity = normalizedQuantity.mul(erc20.totalRewards);\n      const hasAllowance = await (0,_hasERC20Allowance_5075b187_browser_esm_js__WEBPACK_IMPORTED_MODULE_14__.h)(this.contractWrapper, erc20.contractAddress, totalQuantity);\n      if (!hasAllowance) {\n        throw new Error(`ERC20 token with contract address \"${erc20.contractAddress}\" does not have enough allowance to transfer.\\n\\nYou can set allowance to the multiwrap contract to transfer these tokens by running:\\n\\nawait sdk.getToken(\"${erc20.contractAddress}\").setAllowance(\"${this.getAddress()}\", ${totalQuantity});\\n\\n`);\n      }\n      numOfRewardUnits.push(erc20.totalRewards);\n      contents.push({\n        assetContract: erc20.contractAddress,\n        tokenType: 0,\n        totalAmount: totalQuantity,\n        tokenId: 0\n      });\n    }\n    for (const erc721 of erc721Rewards) {\n      const isApproved = await (0,_contract_publisher_4d407331_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.d9)(this.contractWrapper.getProvider(), this.getAddress(), erc721.contractAddress, erc721.tokenId, owner);\n      if (!isApproved) {\n        throw new Error(`ERC721 token \"${erc721.tokenId}\" with contract address \"${erc721.contractAddress}\" is not approved for transfer.\\n\\nYou can give approval the multiwrap contract to transfer this token by running:\\n\\nawait sdk.getNFTCollection(\"${erc721.contractAddress}\").setApprovalForToken(\"${this.getAddress()}\", ${erc721.tokenId});\\n\\n`);\n      }\n      numOfRewardUnits.push(\"1\");\n      contents.push({\n        assetContract: erc721.contractAddress,\n        tokenType: 1,\n        totalAmount: 1,\n        tokenId: erc721.tokenId\n      });\n    }\n    for (const erc1155 of erc1155Rewards) {\n      const isApproved = await (0,_contract_publisher_4d407331_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.d9)(this.contractWrapper.getProvider(), this.getAddress(), erc1155.contractAddress, erc1155.tokenId, owner);\n      if (!isApproved) {\n        throw new Error(`ERC1155 token \"${erc1155.tokenId}\" with contract address \"${erc1155.contractAddress}\" is not approved for transfer.\\n\\nYou can give approval the multiwrap contract to transfer this token by running:\\n\\nawait sdk.getEdition(\"${erc1155.contractAddress}\").setApprovalForAll(\"${this.getAddress()}\", true);\\n\\n`);\n      }\n      numOfRewardUnits.push(erc1155.totalRewards);\n      contents.push({\n        assetContract: erc1155.contractAddress,\n        tokenType: 2,\n        totalAmount: ethers__WEBPACK_IMPORTED_MODULE_11__.BigNumber.from(erc1155.quantityPerReward).mul(ethers__WEBPACK_IMPORTED_MODULE_11__.BigNumber.from(erc1155.totalRewards)),\n        tokenId: erc1155.tokenId\n      });\n    }\n    return {\n      contents,\n      numOfRewardUnits\n    };\n  }\n\n  /**\n   * @internal\n   */\n  async prepare(method, args, overrides) {\n    return _contract_publisher_4d407331_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.aV.fromContractWrapper({\n      contractWrapper: this.contractWrapper,\n      method,\n      args,\n      overrides\n    });\n  }\n\n  /**\n   * @internal\n   */\n  async call(functionName, args, overrides) {\n    return this.contractWrapper.call(functionName, args, overrides);\n  }\n  detectVrf() {\n    if ((0,_contract_publisher_4d407331_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.c1)(this.contractWrapper, \"PackVRF\")) {\n      return new PackVRF(this.contractWrapper.getSignerOrProvider(), this.contractWrapper.readContract.address, this.storage, this.contractWrapper.options, this.chainId);\n    }\n    return undefined;\n  }\n}\n(0,_QueryParams_30d20f88_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__._)(Pack, \"contractRoles\", _contract_publisher_4d407331_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.dF);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@thirdweb-dev/sdk/dist/pack-75f8fc43.browser.esm.js\n"));

/***/ }),

/***/ "./node_modules/@thirdweb-dev/contracts-js/dist/abis/ERC20.json":
/*!**********************************************************************!*\
  !*** ./node_modules/@thirdweb-dev/contracts-js/dist/abis/ERC20.json ***!
  \**********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

module.exports = JSON.parse('[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}]');

/***/ })

}]);